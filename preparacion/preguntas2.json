{
  "preguntas": [
    {
      "pregunta": "¿Qué devuelve la función fetch() cuando se ejecuta?",
      "opciones": ["Un objeto JSON", "Una promesa", "Un array", "Una cadena de texto"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué método HTTP usa fetch() si no se indica otro?",
      "opciones": ["POST", "GET", "PUT", "DELETE"],
      "correcta": 1
    },
    {
      "pregunta": "¿Cómo conviertes la respuesta de fetch a formato JSON?",
      "opciones": ["response.parse()", "response.json()", "response.toJSON()", "response.getJSON()"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué hace el bloque .then() al usar fetch?",
      "opciones": ["Maneja errores", "Encadena una acción tras resolver la promesa", "Ejecuta código antes del fetch", "Cierra la conexión"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué hace el bloque .catch() en una promesa fetch?",
      "opciones": ["Guarda datos", "Repite la petición", "Maneja errores o rechazos", "Convierte la respuesta en JSON"],
      "correcta": 2
    },
    {
      "pregunta": "¿Qué propiedad de la respuesta indica si fue exitosa?",
      "opciones": ["response.code", "response.ok", "response.success", "response.valid"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué método de response devuelve el cuerpo en texto plano?",
      "opciones": ["response.text()", "response.data()", "response.body()", "response.value()"],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué palabra clave se usa junto a fetch para manejarlo con sintaxis moderna y limpia?",
      "opciones": ["await", "async", "then", "wait"],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué función debes usar para indicar que una función trabaja con await?",
      "opciones": ["defer", "promise", "async", "next"],
      "correcta": 2
    },
    {
      "pregunta": "¿Qué hace el parámetro 'method' en fetch?",
      "opciones": ["Define el tipo de contenido", "Define el tipo de solicitud HTTP", "Define la respuesta esperada", "Define el nombre de la API"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué hace el parámetro 'headers' en fetch?",
      "opciones": ["Define la ruta de respuesta", "Agrega encabezados HTTP personalizados", "Guarda las cookies", "Activa CORS automáticamente"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué valor tiene normalmente 'Content-Type' cuando se envían datos en JSON?",
      "opciones": ["application/json", "text/json", "multipart/form-data", "text/plain"],
      "correcta": 0
    },
    {
      "pregunta": "¿Cómo se envían datos con fetch usando POST?",
      "opciones": [
        "fetch(url, {method:'POST', body: JSON.stringify(datos)})",
        "fetch(url, datos)",
        "fetch(url, {send: datos})",
        "fetch.post(url, datos)"
      ],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué hace la opción 'body' en fetch?",
      "opciones": ["Contiene los datos a enviar", "Contiene las cabeceras HTTP", "Define la URL base", "Activa el modo de depuración"],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué sucede si fetch no puede conectarse al servidor?",
      "opciones": ["Lanza un error que se puede capturar", "Devuelve un JSON vacío", "Se congela la app", "Retorna null"],
      "correcta": 0
    },
    {
      "pregunta": "¿Cómo verificas el código de estado HTTP con fetch?",
      "opciones": ["response.status", "response.code", "response.http", "response.statusCode"],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué método de HTTP suele usarse con fetch para eliminar recursos?",
      "opciones": ["REMOVE", "DELETE", "CLEAR", "DROP"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué método se usa para actualizar parcialmente un recurso con fetch?",
      "opciones": ["PUT", "PATCH", "UPDATE", "POST"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué diferencia hay entre PUT y POST al usar fetch?",
      "opciones": [
        "POST crea recursos nuevos, PUT reemplaza los existentes",
        "PUT crea, POST reemplaza",
        "PUT se usa solo en APIs públicas",
        "POST no envía cuerpo en la petición"
      ],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué significa que fetch sea asíncrono?",
      "opciones": [
        "Se ejecuta de forma paralela sin bloquear el flujo del programa",
        "Bloquea el navegador hasta tener respuesta",
        "Se ejecuta solo en segundo plano",
        "Detiene la ejecución hasta recibir datos"
      ],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué hace .finally() en una promesa de fetch?",
      "opciones": ["Ejecuta código solo si hay error", "Ejecuta siempre al finalizar", "Convierte la promesa en síncrona", "Cierra la conexión"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué tipo de dato devuelve response.json()?",
      "opciones": ["Objeto JavaScript", "Texto plano", "XML", "Promesa"],
      "correcta": 3
    },
    {
      "pregunta": "¿Qué propiedad de fetch puedes usar para verificar si la respuesta fue exitosa?",
      "opciones": ["response.valid", "response.ok", "response.success", "response.code"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué librería de JS usa internamente fetch para las promesas?",
      "opciones": ["Axios", "Promise", "NodeRequest", "XHR"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué tipo de error maneja .catch()?",
      "opciones": ["Errores de red o rechazo de promesa", "Errores de sintaxis", "Errores lógicos", "Todos los anteriores"],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué valor devuelve response.ok cuando el estado HTTP es 404?",
      "opciones": ["true", "false", "null", "undefined"],
      "correcta": 1
    },
    {
      "pregunta": "¿Qué hace el método HEAD cuando se usa con fetch?",
      "opciones": ["Obtiene solo los encabezados", "Obtiene el cuerpo sin encabezados", "Elimina un recurso", "Actualiza un registro"],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué palabra clave debes usar para pausar la ejecución hasta recibir la respuesta de fetch?",
      "opciones": ["await", "pause", "stop", "wait"],
      "correcta": 0
    },
    {
      "pregunta": "¿Qué tipo de dato se envía con el cuerpo de la petición en JSON?",
      "opciones": ["Cadena convertida con JSON.stringify()", "Objeto crudo", "Array de datos", "Archivo binario"],
      "correcta": 0
    },
    {
      "pregunta": "¿Cómo podrías manejar múltiples fetch en paralelo?",
      "opciones": ["Promise.all()", "fetch.all()", "await.all()", "fetchGroup()"],
      "correcta": 0
    }
  ]
}
